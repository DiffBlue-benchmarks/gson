package com.google.gson.internal;

import com.diffblue.deeptestutils.Reflector;
import com.google.gson.internal.LazilyParsedNumber;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.InvocationTargetException;

public class LazilyParsedNumberTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: com/google/gson/internal/LazilyParsedNumber.java */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 87 branch to line 90
   *  - conditional line 90 branch to line 91
   *  - conditional line 91 branch to line 91
   *  - conditional line 92 branch to line 92
   */

  @Test
  public void equalsInputNotNullOutputFalse() throws InvocationTargetException {

    // Arrange
    final LazilyParsedNumber objectUnderTest =
        ((LazilyParsedNumber)Reflector.getInstance("com.google.gson.internal.LazilyParsedNumber"));
    Reflector.setField(objectUnderTest, "value", "\"");
    final LazilyParsedNumber obj =
        ((LazilyParsedNumber)Reflector.getInstance("com.google.gson.internal.LazilyParsedNumber"));
    Reflector.setField(obj, "value", "!!!!!!!!");

    // Act
    final boolean retval = objectUnderTest.equals(obj);

    // Assert result
    Assert.assertEquals(false, retval);
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 87 branch to line 90
   *  - conditional line 90 branch to line 91
   *  - conditional line 91 branch to line 91
   *  - conditional line 92 branch to line 92
   */

  @Test
  public void equalsInputNotNullOutputTrue() throws InvocationTargetException {

    // Arrange
    final LazilyParsedNumber objectUnderTest =
        ((LazilyParsedNumber)Reflector.getInstance("com.google.gson.internal.LazilyParsedNumber"));
    Reflector.setField(objectUnderTest, "value", "!");
    final LazilyParsedNumber obj =
        ((LazilyParsedNumber)Reflector.getInstance("com.google.gson.internal.LazilyParsedNumber"));
    Reflector.setField(obj, "value", "!");

    // Act
    final boolean retval = objectUnderTest.equals(obj);

    // Assert result
    Assert.assertEquals(true, retval);
  }

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 87 branch to line 90
   *  - conditional line 90 branch to line 94
   */

  @Test
  public void equalsInputNullOutputFalse() throws InvocationTargetException {

    // Arrange
    final LazilyParsedNumber objectUnderTest =
        ((LazilyParsedNumber)Reflector.getInstance("com.google.gson.internal.LazilyParsedNumber"));
    Reflector.setField(objectUnderTest, "value", "\"");
    final Object obj = null;

    // Act
    final boolean retval = objectUnderTest.equals(obj);

    // Assert result
    Assert.assertEquals(false, retval);
  }
}
